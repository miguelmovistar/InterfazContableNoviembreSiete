//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace IC2.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class ICPruebaEntities : DbContext
    {
        public ICPruebaEntities()
            : base("name=ICPruebaEntities")
        {
            ((IObjectContextAdapter)this).ObjectContext.CommandTimeout = 500000;
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Acceso> Acceso { get; set; }
        public virtual DbSet<AccesoCargas> AccesoCargas { get; set; }
        public virtual DbSet<Acreedor> Acreedor { get; set; }
        public virtual DbSet<Acuerdo_Grupo> Acuerdo_Grupo { get; set; }
        public virtual DbSet<AcuerdoTarifa> AcuerdoTarifa { get; set; }
        public virtual DbSet<Agrupacion> Agrupacion { get; set; }
        public virtual DbSet<AjustesObjecion> AjustesObjecion { get; set; }
        public virtual DbSet<BonoConsumo> BonoConsumo { get; set; }
        public virtual DbSet<BonoTrafico> BonoTrafico { get; set; }
        public virtual DbSet<CaracteristicasPA> CaracteristicasPA { get; set; }
        public virtual DbSet<CargaDocumento> CargaDocumento { get; set; }
        public virtual DbSet<cargaDocumentoRoaming> cargaDocumentoRoaming { get; set; }
        public virtual DbSet<cat_TipoLinea> cat_TipoLinea { get; set; }
        public virtual DbSet<CentroCosto> CentroCosto { get; set; }
        public virtual DbSet<cierreCostosLDI> cierreCostosLDI { get; set; }
        public virtual DbSet<cierreIngresosLDI> cierreIngresosLDI { get; set; }
        public virtual DbSet<cierreSMSLDI> cierreSMSLDI { get; set; }
        public virtual DbSet<Concepto> Concepto { get; set; }
        public virtual DbSet<CosRomCieAjNcMesAnterior> CosRomCieAjNcMesAnterior { get; set; }
        public virtual DbSet<CosRomCieBaseDatos> CosRomCieBaseDatos { get; set; }
        public virtual DbSet<CosRomCieCosto> CosRomCieCosto { get; set; }
        public virtual DbSet<CosRomCieCostosRecurrentes> CosRomCieCostosRecurrentes { get; set; }
        public virtual DbSet<CosRomCieDevengoAcumulado> CosRomCieDevengoAcumulado { get; set; }
        public virtual DbSet<CosRomCieFacturacionCostosRecurrentes> CosRomCieFacturacionCostosRecurrentes { get; set; }
        public virtual DbSet<CosRomCieFacturacionTrafico> CosRomCieFacturacionTrafico { get; set; }
        public virtual DbSet<CosRomCieFacturaTarifa> CosRomCieFacturaTarifa { get; set; }
        public virtual DbSet<CosRomCieNCTarifa> CosRomCieNCTarifa { get; set; }
        public virtual DbSet<CosRomCieNCTrafico> CosRomCieNCTrafico { get; set; }
        public virtual DbSet<CosRomCieProvTar> CosRomCieProvTar { get; set; }
        public virtual DbSet<CosRomCieProvTarAcumMesesAnte> CosRomCieProvTarAcumMesesAnte { get; set; }
        public virtual DbSet<CosRomCieSabana> CosRomCieSabana { get; set; }
        public virtual DbSet<CosRomCieTC> CosRomCieTC { get; set; }
        public virtual DbSet<CosRomCieTraficoPorMes> CosRomCieTraficoPorMes { get; set; }
        public virtual DbSet<CostoFR> CostoFR { get; set; }
        public virtual DbSet<CuentaResultado> CuentaResultado { get; set; }
        public virtual DbSet<DataCostoLDI> DataCostoLDI { get; set; }
        public virtual DbSet<DataIngresoLDI> DataIngresoLDI { get; set; }
        public virtual DbSet<DataReferential> DataReferential { get; set; }
        public virtual DbSet<DatosTraficoLDI> DatosTraficoLDI { get; set; }
        public virtual DbSet<DatosTraficoMVNO> DatosTraficoMVNO { get; set; }
        public virtual DbSet<datosTraficoTAPINA> datosTraficoTAPINA { get; set; }
        public virtual DbSet<datosTraficoTAPINB> datosTraficoTAPINB { get; set; }
        public virtual DbSet<datosTraficoTAPOUTA> datosTraficoTAPOUTA { get; set; }
        public virtual DbSet<datosTraficoTAPOUTB> datosTraficoTAPOUTB { get; set; }
        public virtual DbSet<Deudor> Deudor { get; set; }
        public virtual DbSet<DevengoAcumTraficoIng> DevengoAcumTraficoIng { get; set; }
        public virtual DbSet<DevengoAjustesROM> DevengoAjustesROM { get; set; }
        public virtual DbSet<DevengoCosto> DevengoCosto { get; set; }
        public virtual DbSet<DevengoFluctuacionROM> DevengoFluctuacionROM { get; set; }
        public virtual DbSet<DevengoIngreso> DevengoIngreso { get; set; }
        public virtual DbSet<documentosCosto> documentosCosto { get; set; }
        public virtual DbSet<documentosIngreso> documentosIngreso { get; set; }
        public virtual DbSet<EmpresaIC> EmpresaIC { get; set; }
        public virtual DbSet<FluctuacionCostoLDI> FluctuacionCostoLDI { get; set; }
        public virtual DbSet<FluctuacionIngresoLDI> FluctuacionIngresoLDI { get; set; }
        public virtual DbSet<GACierreCostosLDI> GACierreCostosLDI { get; set; }
        public virtual DbSet<GACierreIngresosLDI> GACierreIngresosLDI { get; set; }
        public virtual DbSet<GACierreSMSLDI> GACierreSMSLDI { get; set; }
        public virtual DbSet<GADataCostoLDI> GADataCostoLDI { get; set; }
        public virtual DbSet<GADataIngresoLDI> GADataIngresoLDI { get; set; }
        public virtual DbSet<GADevengoCosto> GADevengoCosto { get; set; }
        public virtual DbSet<GADevengoIngreso> GADevengoIngreso { get; set; }
        public virtual DbSet<GAFluctuacionCostoLDI> GAFluctuacionCostoLDI { get; set; }
        public virtual DbSet<GAFluctuacionIngresoLDI> GAFluctuacionIngresoLDI { get; set; }
        public virtual DbSet<GAProvisionCostoLDI> GAProvisionCostoLDI { get; set; }
        public virtual DbSet<GAProvisionFeeTIWS> GAProvisionFeeTIWS { get; set; }
        public virtual DbSet<GAPXQCostosLDI> GAPXQCostosLDI { get; set; }
        public virtual DbSet<GAPXQIngresosLDI> GAPXQIngresosLDI { get; set; }
        public virtual DbSet<GAPXQSMSLDI> GAPXQSMSLDI { get; set; }
        public virtual DbSet<Grupo> Grupo { get; set; }
        public virtual DbSet<historialAccesos> historialAccesos { get; set; }
        public virtual DbSet<IngCieRomTC> IngCieRomTC { get; set; }
        public virtual DbSet<IngRomCieAjusNcRealVsDev> IngRomCieAjusNcRealVsDev { get; set; }
        public virtual DbSet<IngRomCieBaseDatos> IngRomCieBaseDatos { get; set; }
        public virtual DbSet<IngRomCieDevengoAcumuladoTrafico> IngRomCieDevengoAcumuladoTrafico { get; set; }
        public virtual DbSet<IngRomCieFacturacionTrafico> IngRomCieFacturacionTrafico { get; set; }
        public virtual DbSet<IngRomCieFacturaTarifa> IngRomCieFacturaTarifa { get; set; }
        public virtual DbSet<IngRomCieIngreso> IngRomCieIngreso { get; set; }
        public virtual DbSet<IngRomCieNcTarifa> IngRomCieNcTarifa { get; set; }
        public virtual DbSet<IngRomCieNcTrafico> IngRomCieNcTrafico { get; set; }
        public virtual DbSet<IngRomCieProvTarifa> IngRomCieProvTarifa { get; set; }
        public virtual DbSet<IngRomCieProvTarifaAcumMesAnte> IngRomCieProvTarifaAcumMesAnte { get; set; }
        public virtual DbSet<IngRomCieSabana> IngRomCieSabana { get; set; }
        public virtual DbSet<IngRomCieTC> IngRomCieTC { get; set; }
        public virtual DbSet<LineaArchivo2> LineaArchivo2 { get; set; }
        public virtual DbSet<LineaNegocio> LineaNegocio { get; set; }
        public virtual DbSet<LogActualizaciones> LogActualizaciones { get; set; }
        public virtual DbSet<Menu> Menu { get; set; }
        public virtual DbSet<MenuAcceso> MenuAcceso { get; set; }
        public virtual DbSet<MenuCargas> MenuCargas { get; set; }
        public virtual DbSet<MenuIC> MenuIC { get; set; }
        public virtual DbSet<Moneda> Moneda { get; set; }
        public virtual DbSet<Movimiento> Movimiento { get; set; }
        public virtual DbSet<NegocioUsuario> NegocioUsuario { get; set; }
        public virtual DbSet<NotaCredito> NotaCredito { get; set; }
        public virtual DbSet<Objecion> Objecion { get; set; }
        public virtual DbSet<Operador> Operador { get; set; }
        public virtual DbSet<Pais> Pais { get; set; }
        public virtual DbSet<parametrosCargaDocumento> parametrosCargaDocumento { get; set; }
        public virtual DbSet<Perfil> Perfil { get; set; }
        public virtual DbSet<Periodos> Periodos { get; set; }
        public virtual DbSet<PeriodosAnterioresCostoROM> PeriodosAnterioresCostoROM { get; set; }
        public virtual DbSet<PeriodosAnterioresIngresoROM> PeriodosAnterioresIngresoROM { get; set; }
        public virtual DbSet<permisos> permisos { get; set; }
        public virtual DbSet<ProvisionCostoLDI> ProvisionCostoLDI { get; set; }
        public virtual DbSet<ProvisionFeeTIWS> ProvisionFeeTIWS { get; set; }
        public virtual DbSet<PXQCostosLDI> PXQCostosLDI { get; set; }
        public virtual DbSet<PXQCostosROM> PXQCostosROM { get; set; }
        public virtual DbSet<PXQCostosROM_B> PXQCostosROM_B { get; set; }
        public virtual DbSet<PXQIngresosLDI> PXQIngresosLDI { get; set; }
        public virtual DbSet<PXQIngresosROM> PXQIngresosROM { get; set; }
        public virtual DbSet<PXQIngresosROM_B> PXQIngresosROM_B { get; set; }
        public virtual DbSet<PXQSMSLDI> PXQSMSLDI { get; set; }
        public virtual DbSet<ResumenDevengoROM> ResumenDevengoROM { get; set; }
        public virtual DbSet<RoamingCancelacionCosto> RoamingCancelacionCosto { get; set; }
        public virtual DbSet<RoamingCancelacionIngreso> RoamingCancelacionIngreso { get; set; }
        public virtual DbSet<RoamingDocumentoCosto> RoamingDocumentoCosto { get; set; }
        public virtual DbSet<RoamingDocumentoIngreso> RoamingDocumentoIngreso { get; set; }
        public virtual DbSet<Servicio> Servicio { get; set; }
        public virtual DbSet<Sociedad> Sociedad { get; set; }
        public virtual DbSet<Submenu> Submenu { get; set; }
        public virtual DbSet<Tarifa> Tarifa { get; set; }
        public virtual DbSet<Tarifa_Fee> Tarifa_Fee { get; set; }
        public virtual DbSet<TarifaRoaming> TarifaRoaming { get; set; }
        public virtual DbSet<TC_Cierre> TC_Cierre { get; set; }
        public virtual DbSet<Trafico> Trafico { get; set; }
        public virtual DbSet<usuarios> usuarios { get; set; }
        public virtual DbSet<FluctuacionCostoROM> FluctuacionCostoROM { get; set; }
        public virtual DbSet<FluctuacionIngresoROM> FluctuacionIngresoROM { get; set; }
        public virtual DbSet<CancelacionProvisionesCosto> CancelacionProvisionesCosto { get; set; }
        public virtual DbSet<HPolizasRechazo> HPolizasRechazo { get; set; }
        public virtual DbSet<LineaArchivo1> LineaArchivo1 { get; set; }
        public virtual DbSet<LineaArchivo1Roaming> LineaArchivo1Roaming { get; set; }
        public virtual DbSet<LineaArchivo2Roaming> LineaArchivo2Roaming { get; set; }
        public virtual DbSet<NCTraficoROM> NCTraficoROM { get; set; }
        public virtual DbSet<Polizas> Polizas { get; set; }
        public virtual DbSet<PolizasAgrupadoLDI> PolizasAgrupadoLDI { get; set; }
        public virtual DbSet<PolizasAgrupadoRoaming> PolizasAgrupadoRoaming { get; set; }
        public virtual DbSet<PolizasRoaming> PolizasRoaming { get; set; }
        public virtual DbSet<PROVTARIFA_MesAnteriorROM> PROVTARIFA_MesAnteriorROM { get; set; }
        public virtual DbSet<PXQIngresosROMRecalculo> PXQIngresosROMRecalculo { get; set; }
        public virtual DbSet<uvw_CancelacionCostoRecurrenteDiferenciaNegativa> uvw_CancelacionCostoRecurrenteDiferenciaNegativa { get; set; }
        public virtual DbSet<uvw_CancelacionCostoRecurrenteDiferenciaPositiva> uvw_CancelacionCostoRecurrenteDiferenciaPositiva { get; set; }
        public virtual DbSet<uvw_CancelacionCostoTarifa> uvw_CancelacionCostoTarifa { get; set; }
        public virtual DbSet<uvw_CancelacionCostoTraficoDiferenciaNegativa> uvw_CancelacionCostoTraficoDiferenciaNegativa { get; set; }
        public virtual DbSet<uvw_CancelacionCostoTraficoDiferenciaPositiva> uvw_CancelacionCostoTraficoDiferenciaPositiva { get; set; }
        public virtual DbSet<uvw_CancelacionIngresoTarifa> uvw_CancelacionIngresoTarifa { get; set; }
        public virtual DbSet<uvw_CancelacionIngresoTraficoDiferenciaNegativa> uvw_CancelacionIngresoTraficoDiferenciaNegativa { get; set; }
        public virtual DbSet<uvw_CancelacionIngresoTraficoDiferenciaPositiva> uvw_CancelacionIngresoTraficoDiferenciaPositiva { get; set; }
        public virtual DbSet<uvw_CargaDocumentoRoaming> uvw_CargaDocumentoRoaming { get; set; }
        public virtual DbSet<uvw_DocumentoCostoSinProvision> uvw_DocumentoCostoSinProvision { get; set; }
        public virtual DbSet<uvw_DocumentoIngresoSinProvision> uvw_DocumentoIngresoSinProvision { get; set; }
        public virtual DbSet<uvw_FluctuacionTarifasCosto> uvw_FluctuacionTarifasCosto { get; set; }
        public virtual DbSet<uvw_FluctuacionTarifasIngreso> uvw_FluctuacionTarifasIngreso { get; set; }
        public virtual DbSet<uvw_PeriodosAnterioresCostoROM> uvw_PeriodosAnterioresCostoROM { get; set; }
        public virtual DbSet<uvw_PeriodosAnterioresIngresoROM> uvw_PeriodosAnterioresIngresoROM { get; set; }
        public virtual DbSet<uvw_PeriodosAnterioresPeriodoCosto> uvw_PeriodosAnterioresPeriodoCosto { get; set; }
        public virtual DbSet<uvw_PeriodosAnterioresPeriodoIngreso> uvw_PeriodosAnterioresPeriodoIngreso { get; set; }
        public virtual DbSet<uvw_ProvisionSinDocumentoCosto> uvw_ProvisionSinDocumentoCosto { get; set; }
        public virtual DbSet<uvw_ProvisionSinDocumentoIngreso> uvw_ProvisionSinDocumentoIngreso { get; set; }
        public virtual DbSet<uvw_RoamingCancelacionCosto> uvw_RoamingCancelacionCosto { get; set; }
        public virtual DbSet<uvw_RoamingCancelacionIngreso> uvw_RoamingCancelacionIngreso { get; set; }
        public virtual DbSet<uvw_RoamingDocumentosCosto> uvw_RoamingDocumentosCosto { get; set; }
        public virtual DbSet<uvw_RoamingDocumentosIngreso> uvw_RoamingDocumentosIngreso { get; set; }
        public virtual DbSet<uvw_RoamingFluctuacionCosto> uvw_RoamingFluctuacionCosto { get; set; }
        public virtual DbSet<uvw_RoamingFluctuacionIngreso> uvw_RoamingFluctuacionIngreso { get; set; }
        public virtual DbSet<v_costos> v_costos { get; set; }
        public virtual DbSet<v_ingresos> v_ingresos { get; set; }
    
        [DbFunction("ICPruebaEntities", "fSepararCadenas")]
        public virtual IQueryable<fSepararCadenas_Result> fSepararCadenas(string pCadena, string pDelimitador)
        {
            var pCadenaParameter = pCadena != null ?
                new ObjectParameter("pCadena", pCadena) :
                new ObjectParameter("pCadena", typeof(string));
    
            var pDelimitadorParameter = pDelimitador != null ?
                new ObjectParameter("pDelimitador", pDelimitador) :
                new ObjectParameter("pDelimitador", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fSepararCadenas_Result>("[ICPruebaEntities].[fSepararCadenas](@pCadena, @pDelimitador)", pCadenaParameter, pDelimitadorParameter);
        }
    
        public virtual ObjectResult<Nullable<System.DateTime>> getListFechas()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<System.DateTime>>("getListFechas");
        }
    
        public virtual int sp_BorrarCargas_Delete(string tabla, Nullable<System.DateTime> fecha_periodo, Nullable<int> lineaNegocio)
        {
            var tablaParameter = tabla != null ?
                new ObjectParameter("tabla", tabla) :
                new ObjectParameter("tabla", typeof(string));
    
            var fecha_periodoParameter = fecha_periodo.HasValue ?
                new ObjectParameter("fecha_periodo", fecha_periodo) :
                new ObjectParameter("fecha_periodo", typeof(System.DateTime));
    
            var lineaNegocioParameter = lineaNegocio.HasValue ?
                new ObjectParameter("lineaNegocio", lineaNegocio) :
                new ObjectParameter("lineaNegocio", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_BorrarCargas_Delete", tablaParameter, fecha_periodoParameter, lineaNegocioParameter);
        }
    
        public virtual int sp_DataCostos_INS(Nullable<System.DateTime> fecha_periodo, string nombretabla)
        {
            var fecha_periodoParameter = fecha_periodo.HasValue ?
                new ObjectParameter("fecha_periodo", fecha_periodo) :
                new ObjectParameter("fecha_periodo", typeof(System.DateTime));
    
            var nombretablaParameter = nombretabla != null ?
                new ObjectParameter("nombretabla", nombretabla) :
                new ObjectParameter("nombretabla", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_DataCostos_INS", fecha_periodoParameter, nombretablaParameter);
        }
    
        public virtual int sp_DataIngresos_INS(Nullable<System.DateTime> fecha_periodo, string nombretabla)
        {
            var fecha_periodoParameter = fecha_periodo.HasValue ?
                new ObjectParameter("fecha_periodo", fecha_periodo) :
                new ObjectParameter("fecha_periodo", typeof(System.DateTime));
    
            var nombretablaParameter = nombretabla != null ?
                new ObjectParameter("nombretabla", nombretabla) :
                new ObjectParameter("nombretabla", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_DataIngresos_INS", fecha_periodoParameter, nombretablaParameter);
        }
    
        public virtual ObjectResult<sp_DevengoCostoLDIGET_Result> sp_DevengoCostoLDIGET(Nullable<int> opcion, Nullable<System.DateTime> fecha_periodo)
        {
            var opcionParameter = opcion.HasValue ?
                new ObjectParameter("Opcion", opcion) :
                new ObjectParameter("Opcion", typeof(int));
    
            var fecha_periodoParameter = fecha_periodo.HasValue ?
                new ObjectParameter("fecha_periodo", fecha_periodo) :
                new ObjectParameter("fecha_periodo", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_DevengoCostoLDIGET_Result>("sp_DevengoCostoLDIGET", opcionParameter, fecha_periodoParameter);
        }
    
        public virtual ObjectResult<sp_DevengoIngresoLDIGET_Result> sp_DevengoIngresoLDIGET(Nullable<int> opcion, Nullable<System.DateTime> fecha_periodo)
        {
            var opcionParameter = opcion.HasValue ?
                new ObjectParameter("Opcion", opcion) :
                new ObjectParameter("Opcion", typeof(int));
    
            var fecha_periodoParameter = fecha_periodo.HasValue ?
                new ObjectParameter("fecha_periodo", fecha_periodo) :
                new ObjectParameter("fecha_periodo", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_DevengoIngresoLDIGET_Result>("sp_DevengoIngresoLDIGET", opcionParameter, fecha_periodoParameter);
        }
    
        public virtual int sp_DevengoLDI_Insert(Nullable<System.DateTime> fecha_periodo, string tipo)
        {
            var fecha_periodoParameter = fecha_periodo.HasValue ?
                new ObjectParameter("fecha_periodo", fecha_periodo) :
                new ObjectParameter("fecha_periodo", typeof(System.DateTime));
    
            var tipoParameter = tipo != null ?
                new ObjectParameter("tipo", tipo) :
                new ObjectParameter("tipo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_DevengoLDI_Insert", fecha_periodoParameter, tipoParameter);
        }
    
        public virtual int sp_FluctuacionesLDI_Insert(Nullable<System.DateTime> fecha_periodo, string tipo)
        {
            var fecha_periodoParameter = fecha_periodo.HasValue ?
                new ObjectParameter("fecha_periodo", fecha_periodo) :
                new ObjectParameter("fecha_periodo", typeof(System.DateTime));
    
            var tipoParameter = tipo != null ?
                new ObjectParameter("tipo", tipo) :
                new ObjectParameter("tipo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_FluctuacionesLDI_Insert", fecha_periodoParameter, tipoParameter);
        }
    
        public virtual int sp_FluctuacionROM_Insert(Nullable<System.DateTime> fecha_periodo, string tipo, string nombretabla)
        {
            var fecha_periodoParameter = fecha_periodo.HasValue ?
                new ObjectParameter("Fecha_periodo", fecha_periodo) :
                new ObjectParameter("Fecha_periodo", typeof(System.DateTime));
    
            var tipoParameter = tipo != null ?
                new ObjectParameter("tipo", tipo) :
                new ObjectParameter("tipo", typeof(string));
    
            var nombretablaParameter = nombretabla != null ?
                new ObjectParameter("nombretabla", nombretabla) :
                new ObjectParameter("nombretabla", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_FluctuacionROM_Insert", fecha_periodoParameter, tipoParameter, nombretablaParameter);
        }
    
        public virtual ObjectResult<sp_GestionAcuerdos_Select_Result> sp_GestionAcuerdos_Select(Nullable<System.DateTime> fecha_periodo)
        {
            var fecha_periodoParameter = fecha_periodo.HasValue ?
                new ObjectParameter("fecha_periodo", fecha_periodo) :
                new ObjectParameter("fecha_periodo", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GestionAcuerdos_Select_Result>("sp_GestionAcuerdos_Select", fecha_periodoParameter);
        }
    
        public virtual ObjectResult<sp_ic_buscaIdsCargaNC_Result> sp_ic_buscaIdsCargaNC(string sociedad, string trafico, string servicio, string deudorAcreedor, string operador, string grupo, string moneda, Nullable<int> lineaNegocio)
        {
            var sociedadParameter = sociedad != null ?
                new ObjectParameter("sociedad", sociedad) :
                new ObjectParameter("sociedad", typeof(string));
    
            var traficoParameter = trafico != null ?
                new ObjectParameter("trafico", trafico) :
                new ObjectParameter("trafico", typeof(string));
    
            var servicioParameter = servicio != null ?
                new ObjectParameter("servicio", servicio) :
                new ObjectParameter("servicio", typeof(string));
    
            var deudorAcreedorParameter = deudorAcreedor != null ?
                new ObjectParameter("deudorAcreedor", deudorAcreedor) :
                new ObjectParameter("deudorAcreedor", typeof(string));
    
            var operadorParameter = operador != null ?
                new ObjectParameter("operador", operador) :
                new ObjectParameter("operador", typeof(string));
    
            var grupoParameter = grupo != null ?
                new ObjectParameter("grupo", grupo) :
                new ObjectParameter("grupo", typeof(string));
    
            var monedaParameter = moneda != null ?
                new ObjectParameter("moneda", moneda) :
                new ObjectParameter("moneda", typeof(string));
    
            var lineaNegocioParameter = lineaNegocio.HasValue ?
                new ObjectParameter("lineaNegocio", lineaNegocio) :
                new ObjectParameter("lineaNegocio", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_ic_buscaIdsCargaNC_Result>("sp_ic_buscaIdsCargaNC", sociedadParameter, traficoParameter, servicioParameter, deudorAcreedorParameter, operadorParameter, grupoParameter, monedaParameter, lineaNegocioParameter);
        }
    
        public virtual ObjectResult<sp_ic_buscaIdsCargaTraficoLDI_Result> sp_ic_buscaIdsCargaTraficoLDI(string trafico, string operador, string moneda, Nullable<int> lineaNegocio)
        {
            var traficoParameter = trafico != null ?
                new ObjectParameter("trafico", trafico) :
                new ObjectParameter("trafico", typeof(string));
    
            var operadorParameter = operador != null ?
                new ObjectParameter("operador", operador) :
                new ObjectParameter("operador", typeof(string));
    
            var monedaParameter = moneda != null ?
                new ObjectParameter("moneda", moneda) :
                new ObjectParameter("moneda", typeof(string));
    
            var lineaNegocioParameter = lineaNegocio.HasValue ?
                new ObjectParameter("lineaNegocio", lineaNegocio) :
                new ObjectParameter("lineaNegocio", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_ic_buscaIdsCargaTraficoLDI_Result>("sp_ic_buscaIdsCargaTraficoLDI", traficoParameter, operadorParameter, monedaParameter, lineaNegocioParameter);
        }
    
        public virtual ObjectResult<sp_ic_obtieneIdGrupo_Result> sp_ic_obtieneIdGrupo(string grupo)
        {
            var grupoParameter = grupo != null ?
                new ObjectParameter("Grupo", grupo) :
                new ObjectParameter("Grupo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_ic_obtieneIdGrupo_Result>("sp_ic_obtieneIdGrupo", grupoParameter);
        }
    
        public virtual ObjectResult<sp_ic_obtieneIdsOperadorGrupo_Result> sp_ic_obtieneIdsOperadorGrupo(string parametro)
        {
            var parametroParameter = parametro != null ?
                new ObjectParameter("parametro", parametro) :
                new ObjectParameter("parametro", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_ic_obtieneIdsOperadorGrupo_Result>("sp_ic_obtieneIdsOperadorGrupo", parametroParameter);
        }
    
        public virtual int sp_ic_obtienePeriodo()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_ic_obtienePeriodo");
        }
    
        public virtual int sp_InsertarPXQCostosROM(Nullable<System.DateTime> fecha)
        {
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("Fecha", fecha) :
                new ObjectParameter("Fecha", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_InsertarPXQCostosROM", fechaParameter);
        }
    
        public virtual int sp_InsertarPXQCostosROM_B(Nullable<System.DateTime> fecha)
        {
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("Fecha", fecha) :
                new ObjectParameter("Fecha", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_InsertarPXQCostosROM_B", fechaParameter);
        }
    
        public virtual int sp_InsertarPXQIngresosROM(Nullable<System.DateTime> fecha)
        {
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("Fecha", fecha) :
                new ObjectParameter("Fecha", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_InsertarPXQIngresosROM", fechaParameter);
        }
    
        public virtual int sp_InsertarPXQIngresosROM_B(Nullable<System.DateTime> fecha)
        {
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("Fecha", fecha) :
                new ObjectParameter("Fecha", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_InsertarPXQIngresosROM_B", fechaParameter);
        }
    
        public virtual int sp_provisionCosto(Nullable<System.DateTime> periodo, string tipo, string nombretabla)
        {
            var periodoParameter = periodo.HasValue ?
                new ObjectParameter("periodo", periodo) :
                new ObjectParameter("periodo", typeof(System.DateTime));
    
            var tipoParameter = tipo != null ?
                new ObjectParameter("tipo", tipo) :
                new ObjectParameter("tipo", typeof(string));
    
            var nombretablaParameter = nombretabla != null ?
                new ObjectParameter("nombretabla", nombretabla) :
                new ObjectParameter("nombretabla", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_provisionCosto", periodoParameter, tipoParameter, nombretablaParameter);
        }
    
        public virtual int sp_ProvisionCostoAcuerdosLDI(Nullable<System.DateTime> periodo, string nombretabla)
        {
            var periodoParameter = periodo.HasValue ?
                new ObjectParameter("periodo", periodo) :
                new ObjectParameter("periodo", typeof(System.DateTime));
    
            var nombretablaParameter = nombretabla != null ?
                new ObjectParameter("nombretabla", nombretabla) :
                new ObjectParameter("nombretabla", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_ProvisionCostoAcuerdosLDI", periodoParameter, nombretablaParameter);
        }
    
        public virtual int sp_provisionFEETIWS(Nullable<System.DateTime> periodo, string tabla)
        {
            var periodoParameter = periodo.HasValue ?
                new ObjectParameter("periodo", periodo) :
                new ObjectParameter("periodo", typeof(System.DateTime));
    
            var tablaParameter = tabla != null ?
                new ObjectParameter("tabla", tabla) :
                new ObjectParameter("tabla", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_provisionFEETIWS", periodoParameter, tablaParameter);
        }
    
        public virtual int sp_provisionIngreso(Nullable<System.DateTime> periodo, string tipo, string nombretabla)
        {
            var periodoParameter = periodo.HasValue ?
                new ObjectParameter("periodo", periodo) :
                new ObjectParameter("periodo", typeof(System.DateTime));
    
            var tipoParameter = tipo != null ?
                new ObjectParameter("tipo", tipo) :
                new ObjectParameter("tipo", typeof(string));
    
            var nombretablaParameter = nombretabla != null ?
                new ObjectParameter("nombretabla", nombretabla) :
                new ObjectParameter("nombretabla", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_provisionIngreso", periodoParameter, tipoParameter, nombretablaParameter);
        }
    
        public virtual int sp_provisionSMS(Nullable<System.DateTime> periodo, string tipo, string nombretabla)
        {
            var periodoParameter = periodo.HasValue ?
                new ObjectParameter("periodo", periodo) :
                new ObjectParameter("periodo", typeof(System.DateTime));
    
            var tipoParameter = tipo != null ?
                new ObjectParameter("tipo", tipo) :
                new ObjectParameter("tipo", typeof(string));
    
            var nombretablaParameter = nombretabla != null ?
                new ObjectParameter("nombretabla", nombretabla) :
                new ObjectParameter("nombretabla", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_provisionSMS", periodoParameter, tipoParameter, nombretablaParameter);
        }
    
        public virtual int sp_RecalculoGA_Insert(Nullable<System.DateTime> fecha_periodo)
        {
            var fecha_periodoParameter = fecha_periodo.HasValue ?
                new ObjectParameter("fecha_periodo", fecha_periodo) :
                new ObjectParameter("fecha_periodo", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_RecalculoGA_Insert", fecha_periodoParameter);
        }
    
        public virtual int sp_traficoConceptos_Update(Nullable<System.DateTime> periodo)
        {
            var periodoParameter = periodo.HasValue ?
                new ObjectParameter("periodo", periodo) :
                new ObjectParameter("periodo", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_traficoConceptos_Update", periodoParameter);
        }
    
        public virtual ObjectResult<sp_ValidaRelaciones_Result> sp_ValidaRelaciones(string vcTabla, Nullable<int> intId)
        {
            var vcTablaParameter = vcTabla != null ?
                new ObjectParameter("vcTabla", vcTabla) :
                new ObjectParameter("vcTabla", typeof(string));
    
            var intIdParameter = intId.HasValue ?
                new ObjectParameter("intId", intId) :
                new ObjectParameter("intId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_ValidaRelaciones_Result>("sp_ValidaRelaciones", vcTablaParameter, intIdParameter);
        }
    
        public virtual int spAjustesObjecion(Nullable<int> numRegistros, Nullable<int> lineaNegocio)
        {
            var numRegistrosParameter = numRegistros.HasValue ?
                new ObjectParameter("numRegistros", numRegistros) :
                new ObjectParameter("numRegistros", typeof(int));
    
            var lineaNegocioParameter = lineaNegocio.HasValue ?
                new ObjectParameter("lineaNegocio", lineaNegocio) :
                new ObjectParameter("lineaNegocio", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spAjustesObjecion", numRegistrosParameter, lineaNegocioParameter);
        }
    
        public virtual int spAjustesSelect(Nullable<System.DateTime> periodo, Nullable<byte> tipo)
        {
            var periodoParameter = periodo.HasValue ?
                new ObjectParameter("periodo", periodo) :
                new ObjectParameter("periodo", typeof(System.DateTime));
    
            var tipoParameter = tipo.HasValue ?
                new ObjectParameter("tipo", tipo) :
                new ObjectParameter("tipo", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spAjustesSelect", periodoParameter, tipoParameter);
        }
    
        public virtual int SPCargaRoaming(string archivo)
        {
            var archivoParameter = archivo != null ?
                new ObjectParameter("archivo", archivo) :
                new ObjectParameter("archivo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SPCargaRoaming", archivoParameter);
        }
    
        public virtual int spCosRomCieAjNcMesAnteriorPeriodoInsert(Nullable<System.DateTime> periodo)
        {
            var periodoParameter = periodo.HasValue ?
                new ObjectParameter("periodo", periodo) :
                new ObjectParameter("periodo", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spCosRomCieAjNcMesAnteriorPeriodoInsert", periodoParameter);
        }
    
        public virtual int spCosRomCieAjNcMesAnteriorPeriodoSelect()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spCosRomCieAjNcMesAnteriorPeriodoSelect");
        }
    
        public virtual int spCosRomCieBaseDatosInsert(Nullable<System.DateTime> periodo)
        {
            var periodoParameter = periodo.HasValue ?
                new ObjectParameter("periodo", periodo) :
                new ObjectParameter("periodo", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spCosRomCieBaseDatosInsert", periodoParameter);
        }
    
        public virtual int spCosRomCieBaseDatosSelect()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spCosRomCieBaseDatosSelect");
        }
    
        public virtual int spCosRomCieCostoInsert(Nullable<System.DateTime> periodo)
        {
            var periodoParameter = periodo.HasValue ?
                new ObjectParameter("periodo", periodo) :
                new ObjectParameter("periodo", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spCosRomCieCostoInsert", periodoParameter);
        }
    
        public virtual int spCosRomCieCostoSelect(Nullable<bool> esCostoRecurrente)
        {
            var esCostoRecurrenteParameter = esCostoRecurrente.HasValue ?
                new ObjectParameter("EsCostoRecurrente", esCostoRecurrente) :
                new ObjectParameter("EsCostoRecurrente", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spCosRomCieCostoSelect", esCostoRecurrenteParameter);
        }
    
        public virtual int spCosRomCieCostosRecurrentesInsert(Nullable<System.DateTime> periodo)
        {
            var periodoParameter = periodo.HasValue ?
                new ObjectParameter("periodo", periodo) :
                new ObjectParameter("periodo", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spCosRomCieCostosRecurrentesInsert", periodoParameter);
        }
    
        public virtual int spCosRomCieCostosRecurrentesSelect()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spCosRomCieCostosRecurrentesSelect");
        }
    
        public virtual int spCosRomCieDevengoAcumuladoCRSelect()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spCosRomCieDevengoAcumuladoCRSelect");
        }
    
        public virtual int spCosRomCieDevengoAcumuladoInsert(Nullable<System.DateTime> periodo)
        {
            var periodoParameter = periodo.HasValue ?
                new ObjectParameter("periodo", periodo) :
                new ObjectParameter("periodo", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spCosRomCieDevengoAcumuladoInsert", periodoParameter);
        }
    
        public virtual int spCosRomCieDevengoAcumuladoSelect()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spCosRomCieDevengoAcumuladoSelect");
        }
    
        public virtual int spCosRomCieFacturacionCostosRecurrentesInsert(Nullable<System.DateTime> periodo)
        {
            var periodoParameter = periodo.HasValue ?
                new ObjectParameter("periodo", periodo) :
                new ObjectParameter("periodo", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spCosRomCieFacturacionCostosRecurrentesInsert", periodoParameter);
        }
    
        public virtual int spCosRomCieFacturacionTraficoInsert(Nullable<System.DateTime> periodo)
        {
            var periodoParameter = periodo.HasValue ?
                new ObjectParameter("periodo", periodo) :
                new ObjectParameter("periodo", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spCosRomCieFacturacionTraficoInsert", periodoParameter);
        }
    
        public virtual int spCosRomCieFacturaTarifaInsert(Nullable<System.DateTime> periodo)
        {
            var periodoParameter = periodo.HasValue ?
                new ObjectParameter("periodo", periodo) :
                new ObjectParameter("periodo", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spCosRomCieFacturaTarifaInsert", periodoParameter);
        }
    
        public virtual int spCosRomCieFacturaTraficoNCSelect(Nullable<int> tipo)
        {
            var tipoParameter = tipo.HasValue ?
                new ObjectParameter("tipo", tipo) :
                new ObjectParameter("tipo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spCosRomCieFacturaTraficoNCSelect", tipoParameter);
        }
    
        public virtual int spCosRomCieInsert(Nullable<System.DateTime> periodo)
        {
            var periodoParameter = periodo.HasValue ?
                new ObjectParameter("periodo", periodo) :
                new ObjectParameter("periodo", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spCosRomCieInsert", periodoParameter);
        }
    
        public virtual int spCosRomCieNCTarifaInsert(Nullable<System.DateTime> periodo)
        {
            var periodoParameter = periodo.HasValue ?
                new ObjectParameter("periodo", periodo) :
                new ObjectParameter("periodo", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spCosRomCieNCTarifaInsert", periodoParameter);
        }
    
        public virtual int spCosRomCieNCTraficoInsert(Nullable<System.DateTime> periodo)
        {
            var periodoParameter = periodo.HasValue ?
                new ObjectParameter("periodo", periodo) :
                new ObjectParameter("periodo", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spCosRomCieNCTraficoInsert", periodoParameter);
        }
    
        public virtual int spCosRomCieProvTarAcumMesesAnteInsert(Nullable<System.DateTime> periodo)
        {
            var periodoParameter = periodo.HasValue ?
                new ObjectParameter("periodo", periodo) :
                new ObjectParameter("periodo", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spCosRomCieProvTarAcumMesesAnteInsert", periodoParameter);
        }
    
        public virtual int spCosRomCieProvTarAcumMesesAnteSelect()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spCosRomCieProvTarAcumMesesAnteSelect");
        }
    
        public virtual int spCosRomCieProvTarSelect()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spCosRomCieProvTarSelect");
        }
    
        public virtual int spCosRomCieProvTarXPeriodoInsert(Nullable<System.DateTime> periodo)
        {
            var periodoParameter = periodo.HasValue ?
                new ObjectParameter("periodo", periodo) :
                new ObjectParameter("periodo", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spCosRomCieProvTarXPeriodoInsert", periodoParameter);
        }
    
        public virtual int spCosRomCieSabanaInsert(Nullable<System.DateTime> periodo)
        {
            var periodoParameter = periodo.HasValue ?
                new ObjectParameter("periodo", periodo) :
                new ObjectParameter("periodo", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spCosRomCieSabanaInsert", periodoParameter);
        }
    
        public virtual int spCosRomCieSabanaSelect()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spCosRomCieSabanaSelect");
        }
    
        public virtual int spCosRomCieTCInsert(Nullable<System.DateTime> periodo)
        {
            var periodoParameter = periodo.HasValue ?
                new ObjectParameter("periodo", periodo) :
                new ObjectParameter("periodo", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spCosRomCieTCInsert", periodoParameter);
        }
    
        public virtual int spCosRomCieTCSelect()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spCosRomCieTCSelect");
        }
    
        public virtual int spCosRomCieTraficoPorMesInsert(Nullable<System.DateTime> periodo)
        {
            var periodoParameter = periodo.HasValue ?
                new ObjectParameter("periodo", periodo) :
                new ObjectParameter("periodo", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spCosRomCieTraficoPorMesInsert", periodoParameter);
        }
    
        public virtual int spCosRomCieTraficoPorMesSelect()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spCosRomCieTraficoPorMesSelect");
        }
    
        public virtual ObjectResult<spDefinitionTypeSelect_Result> spDefinitionTypeSelect(string typeName)
        {
            var typeNameParameter = typeName != null ?
                new ObjectParameter("typeName", typeName) :
                new ObjectParameter("typeName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spDefinitionTypeSelect_Result>("spDefinitionTypeSelect", typeNameParameter);
        }
    
        public virtual int spIngCierRomInsert(Nullable<System.DateTime> fECHA)
        {
            var fECHAParameter = fECHA.HasValue ?
                new ObjectParameter("FECHA", fECHA) :
                new ObjectParameter("FECHA", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spIngCierRomInsert", fECHAParameter);
        }
    
        public virtual int spIngRomCieAjusNcRealVsDevInsert(Nullable<System.DateTime> periodo)
        {
            var periodoParameter = periodo.HasValue ?
                new ObjectParameter("periodo", periodo) :
                new ObjectParameter("periodo", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spIngRomCieAjusNcRealVsDevInsert", periodoParameter);
        }
    
        public virtual int spIngRomCieAjusNcRealVsDevSelect()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spIngRomCieAjusNcRealVsDevSelect");
        }
    
        public virtual int spIngRomCieBaseDatosInsert(Nullable<System.DateTime> periodo)
        {
            var periodoParameter = periodo.HasValue ?
                new ObjectParameter("periodo", periodo) :
                new ObjectParameter("periodo", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spIngRomCieBaseDatosInsert", periodoParameter);
        }
    
        public virtual int spIngRomCieBaseDatosSelect()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spIngRomCieBaseDatosSelect");
        }
    
        public virtual int spIngRomCieDevengoAcumuladoTraficoInsert(Nullable<System.DateTime> periodo)
        {
            var periodoParameter = periodo.HasValue ?
                new ObjectParameter("periodo", periodo) :
                new ObjectParameter("periodo", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spIngRomCieDevengoAcumuladoTraficoInsert", periodoParameter);
        }
    
        public virtual int spIngRomCieDevengoAcumuladoTraficoSelect()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spIngRomCieDevengoAcumuladoTraficoSelect");
        }
    
        public virtual int spIngRomCieFacturacionTraficoInsert(Nullable<System.DateTime> periodo)
        {
            var periodoParameter = periodo.HasValue ?
                new ObjectParameter("periodo", periodo) :
                new ObjectParameter("periodo", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spIngRomCieFacturacionTraficoInsert", periodoParameter);
        }
    
        public virtual int spIngRomCieFacturaTarifaInsert(Nullable<System.DateTime> periodo)
        {
            var periodoParameter = periodo.HasValue ?
                new ObjectParameter("periodo", periodo) :
                new ObjectParameter("periodo", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spIngRomCieFacturaTarifaInsert", periodoParameter);
        }
    
        public virtual int spIngRomCieFacturaTraficoNCSelect(Nullable<int> tipo)
        {
            var tipoParameter = tipo.HasValue ?
                new ObjectParameter("tipo", tipo) :
                new ObjectParameter("tipo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spIngRomCieFacturaTraficoNCSelect", tipoParameter);
        }
    
        public virtual int spIngRomCieIngresoInsert(Nullable<System.DateTime> periodo)
        {
            var periodoParameter = periodo.HasValue ?
                new ObjectParameter("periodo", periodo) :
                new ObjectParameter("periodo", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spIngRomCieIngresoInsert", periodoParameter);
        }
    
        public virtual int spIngRomCieIngresoSelect()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spIngRomCieIngresoSelect");
        }
    
        public virtual int spIngRomCieNCTarifaInsert(Nullable<System.DateTime> periodo)
        {
            var periodoParameter = periodo.HasValue ?
                new ObjectParameter("periodo", periodo) :
                new ObjectParameter("periodo", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spIngRomCieNCTarifaInsert", periodoParameter);
        }
    
        public virtual int spIngRomCieNCTraficoInsert(Nullable<System.DateTime> periodo)
        {
            var periodoParameter = periodo.HasValue ?
                new ObjectParameter("periodo", periodo) :
                new ObjectParameter("periodo", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spIngRomCieNCTraficoInsert", periodoParameter);
        }
    
        public virtual int spIngRomCieProvTarAcumMesesAnteSelect()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spIngRomCieProvTarAcumMesesAnteSelect");
        }
    
        public virtual int spIngRomCieProvTarifaAcumMesAnteInsert(Nullable<System.DateTime> periodo)
        {
            var periodoParameter = periodo.HasValue ?
                new ObjectParameter("periodo", periodo) :
                new ObjectParameter("periodo", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spIngRomCieProvTarifaAcumMesAnteInsert", periodoParameter);
        }
    
        public virtual int spIngRomCieProvTarInsert(Nullable<System.DateTime> periodo)
        {
            var periodoParameter = periodo.HasValue ?
                new ObjectParameter("periodo", periodo) :
                new ObjectParameter("periodo", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spIngRomCieProvTarInsert", periodoParameter);
        }
    
        public virtual int spIngRomCieProvTarSelect()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spIngRomCieProvTarSelect");
        }
    
        public virtual int spIngRomCieSabanaInsert(Nullable<System.DateTime> periodo)
        {
            var periodoParameter = periodo.HasValue ?
                new ObjectParameter("periodo", periodo) :
                new ObjectParameter("periodo", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spIngRomCieSabanaInsert", periodoParameter);
        }
    
        public virtual int spIngRomCieSabanaSelect()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spIngRomCieSabanaSelect");
        }
    
        public virtual int spIngRomCieTCInsert(Nullable<System.DateTime> periodo)
        {
            var periodoParameter = periodo.HasValue ?
                new ObjectParameter("periodo", periodo) :
                new ObjectParameter("periodo", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spIngRomCieTCInsert", periodoParameter);
        }
    
        public virtual int spIngRomCieTCSelect()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spIngRomCieTCSelect");
        }
    
        public virtual int spPXQIngresosRecalculoInsert(Nullable<System.DateTime> periodo)
        {
            var periodoParameter = periodo.HasValue ?
                new ObjectParameter("periodo", periodo) :
                new ObjectParameter("periodo", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spPXQIngresosRecalculoInsert", periodoParameter);
        }
    
        public virtual ObjectResult<spValidaAjustesObj_Result> spValidaAjustesObj(string sentido, string sociedad, string trafico, string servicio, string deudorAcreedor, string operador, string grupo, Nullable<int> lineaNegocio)
        {
            var sentidoParameter = sentido != null ?
                new ObjectParameter("sentido", sentido) :
                new ObjectParameter("sentido", typeof(string));
    
            var sociedadParameter = sociedad != null ?
                new ObjectParameter("sociedad", sociedad) :
                new ObjectParameter("sociedad", typeof(string));
    
            var traficoParameter = trafico != null ?
                new ObjectParameter("trafico", trafico) :
                new ObjectParameter("trafico", typeof(string));
    
            var servicioParameter = servicio != null ?
                new ObjectParameter("servicio", servicio) :
                new ObjectParameter("servicio", typeof(string));
    
            var deudorAcreedorParameter = deudorAcreedor != null ?
                new ObjectParameter("deudorAcreedor", deudorAcreedor) :
                new ObjectParameter("deudorAcreedor", typeof(string));
    
            var operadorParameter = operador != null ?
                new ObjectParameter("operador", operador) :
                new ObjectParameter("operador", typeof(string));
    
            var grupoParameter = grupo != null ?
                new ObjectParameter("grupo", grupo) :
                new ObjectParameter("grupo", typeof(string));
    
            var lineaNegocioParameter = lineaNegocio.HasValue ?
                new ObjectParameter("lineaNegocio", lineaNegocio) :
                new ObjectParameter("lineaNegocio", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spValidaAjustesObj_Result>("spValidaAjustesObj", sentidoParameter, sociedadParameter, traficoParameter, servicioParameter, deudorAcreedorParameter, operadorParameter, grupoParameter, lineaNegocioParameter);
        }
    
        public virtual ObjectResult<spValidaDocumentosCost_Result> spValidaDocumentosCost(string compania, string servicio, string grupo, string acreedor, string operador, string trafico, string moneda, string cuentaContable, string codigoMaterial, Nullable<int> lineaNegocio)
        {
            var companiaParameter = compania != null ?
                new ObjectParameter("compania", compania) :
                new ObjectParameter("compania", typeof(string));
    
            var servicioParameter = servicio != null ?
                new ObjectParameter("servicio", servicio) :
                new ObjectParameter("servicio", typeof(string));
    
            var grupoParameter = grupo != null ?
                new ObjectParameter("grupo", grupo) :
                new ObjectParameter("grupo", typeof(string));
    
            var acreedorParameter = acreedor != null ?
                new ObjectParameter("acreedor", acreedor) :
                new ObjectParameter("acreedor", typeof(string));
    
            var operadorParameter = operador != null ?
                new ObjectParameter("operador", operador) :
                new ObjectParameter("operador", typeof(string));
    
            var traficoParameter = trafico != null ?
                new ObjectParameter("trafico", trafico) :
                new ObjectParameter("trafico", typeof(string));
    
            var monedaParameter = moneda != null ?
                new ObjectParameter("moneda", moneda) :
                new ObjectParameter("moneda", typeof(string));
    
            var cuentaContableParameter = cuentaContable != null ?
                new ObjectParameter("cuentaContable", cuentaContable) :
                new ObjectParameter("cuentaContable", typeof(string));
    
            var codigoMaterialParameter = codigoMaterial != null ?
                new ObjectParameter("codigoMaterial", codigoMaterial) :
                new ObjectParameter("codigoMaterial", typeof(string));
    
            var lineaNegocioParameter = lineaNegocio.HasValue ?
                new ObjectParameter("lineaNegocio", lineaNegocio) :
                new ObjectParameter("lineaNegocio", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spValidaDocumentosCost_Result>("spValidaDocumentosCost", companiaParameter, servicioParameter, grupoParameter, acreedorParameter, operadorParameter, traficoParameter, monedaParameter, cuentaContableParameter, codigoMaterialParameter, lineaNegocioParameter);
        }
    
        public virtual ObjectResult<spValidaDocumentosIng_Result> spValidaDocumentosIng(string compania, string servicio, string grupo, string deudor, string operador, string trafico, string moneda, string cuentaContable, string codigoMaterial, Nullable<int> lineaNegocio)
        {
            var companiaParameter = compania != null ?
                new ObjectParameter("compania", compania) :
                new ObjectParameter("compania", typeof(string));
    
            var servicioParameter = servicio != null ?
                new ObjectParameter("servicio", servicio) :
                new ObjectParameter("servicio", typeof(string));
    
            var grupoParameter = grupo != null ?
                new ObjectParameter("grupo", grupo) :
                new ObjectParameter("grupo", typeof(string));
    
            var deudorParameter = deudor != null ?
                new ObjectParameter("deudor", deudor) :
                new ObjectParameter("deudor", typeof(string));
    
            var operadorParameter = operador != null ?
                new ObjectParameter("operador", operador) :
                new ObjectParameter("operador", typeof(string));
    
            var traficoParameter = trafico != null ?
                new ObjectParameter("trafico", trafico) :
                new ObjectParameter("trafico", typeof(string));
    
            var monedaParameter = moneda != null ?
                new ObjectParameter("moneda", moneda) :
                new ObjectParameter("moneda", typeof(string));
    
            var cuentaContableParameter = cuentaContable != null ?
                new ObjectParameter("cuentaContable", cuentaContable) :
                new ObjectParameter("cuentaContable", typeof(string));
    
            var codigoMaterialParameter = codigoMaterial != null ?
                new ObjectParameter("codigoMaterial", codigoMaterial) :
                new ObjectParameter("codigoMaterial", typeof(string));
    
            var lineaNegocioParameter = lineaNegocio.HasValue ?
                new ObjectParameter("lineaNegocio", lineaNegocio) :
                new ObjectParameter("lineaNegocio", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spValidaDocumentosIng_Result>("spValidaDocumentosIng", companiaParameter, servicioParameter, grupoParameter, deudorParameter, operadorParameter, traficoParameter, monedaParameter, cuentaContableParameter, codigoMaterialParameter, lineaNegocioParameter);
        }
    
        public virtual ObjectResult<spValidaFacturasCosto_Result> spValidaFacturasCosto(string compania, string trafico, string moneda, string codigoMaterial, string grupo, string acreedor, string operador, string servicio, string cuentaContable, Nullable<int> lineaNegocio)
        {
            var companiaParameter = compania != null ?
                new ObjectParameter("compania", compania) :
                new ObjectParameter("compania", typeof(string));
    
            var traficoParameter = trafico != null ?
                new ObjectParameter("trafico", trafico) :
                new ObjectParameter("trafico", typeof(string));
    
            var monedaParameter = moneda != null ?
                new ObjectParameter("moneda", moneda) :
                new ObjectParameter("moneda", typeof(string));
    
            var codigoMaterialParameter = codigoMaterial != null ?
                new ObjectParameter("codigoMaterial", codigoMaterial) :
                new ObjectParameter("codigoMaterial", typeof(string));
    
            var grupoParameter = grupo != null ?
                new ObjectParameter("grupo", grupo) :
                new ObjectParameter("grupo", typeof(string));
    
            var acreedorParameter = acreedor != null ?
                new ObjectParameter("acreedor", acreedor) :
                new ObjectParameter("acreedor", typeof(string));
    
            var operadorParameter = operador != null ?
                new ObjectParameter("operador", operador) :
                new ObjectParameter("operador", typeof(string));
    
            var servicioParameter = servicio != null ?
                new ObjectParameter("servicio", servicio) :
                new ObjectParameter("servicio", typeof(string));
    
            var cuentaContableParameter = cuentaContable != null ?
                new ObjectParameter("cuentaContable", cuentaContable) :
                new ObjectParameter("cuentaContable", typeof(string));
    
            var lineaNegocioParameter = lineaNegocio.HasValue ?
                new ObjectParameter("lineaNegocio", lineaNegocio) :
                new ObjectParameter("lineaNegocio", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spValidaFacturasCosto_Result>("spValidaFacturasCosto", companiaParameter, traficoParameter, monedaParameter, codigoMaterialParameter, grupoParameter, acreedorParameter, operadorParameter, servicioParameter, cuentaContableParameter, lineaNegocioParameter);
        }
    
        public virtual ObjectResult<spValidaIdCostoFR_Result> spValidaIdCostoFR(string operador, string acreedor, string moneda, Nullable<int> lineaNegocio)
        {
            var operadorParameter = operador != null ?
                new ObjectParameter("operador", operador) :
                new ObjectParameter("operador", typeof(string));
    
            var acreedorParameter = acreedor != null ?
                new ObjectParameter("acreedor", acreedor) :
                new ObjectParameter("acreedor", typeof(string));
    
            var monedaParameter = moneda != null ?
                new ObjectParameter("moneda", moneda) :
                new ObjectParameter("moneda", typeof(string));
    
            var lineaNegocioParameter = lineaNegocio.HasValue ?
                new ObjectParameter("lineaNegocio", lineaNegocio) :
                new ObjectParameter("lineaNegocio", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spValidaIdCostoFR_Result>("spValidaIdCostoFR", operadorParameter, acreedorParameter, monedaParameter, lineaNegocioParameter);
        }
    
        public virtual int usp_ActualizarDatosPolizaSAP(Nullable<long> idPoliza, string sentido, string estado, Nullable<bool> enviado, string nombre, string numeroPoliza, string descripcionMensaje, string rechazado, string reprocesado, string poliza, Nullable<bool> polizaGenerada)
        {
            var idPolizaParameter = idPoliza.HasValue ?
                new ObjectParameter("IdPoliza", idPoliza) :
                new ObjectParameter("IdPoliza", typeof(long));
    
            var sentidoParameter = sentido != null ?
                new ObjectParameter("Sentido", sentido) :
                new ObjectParameter("Sentido", typeof(string));
    
            var estadoParameter = estado != null ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(string));
    
            var enviadoParameter = enviado.HasValue ?
                new ObjectParameter("Enviado", enviado) :
                new ObjectParameter("Enviado", typeof(bool));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var numeroPolizaParameter = numeroPoliza != null ?
                new ObjectParameter("NumeroPoliza", numeroPoliza) :
                new ObjectParameter("NumeroPoliza", typeof(string));
    
            var descripcionMensajeParameter = descripcionMensaje != null ?
                new ObjectParameter("DescripcionMensaje", descripcionMensaje) :
                new ObjectParameter("DescripcionMensaje", typeof(string));
    
            var rechazadoParameter = rechazado != null ?
                new ObjectParameter("Rechazado", rechazado) :
                new ObjectParameter("Rechazado", typeof(string));
    
            var reprocesadoParameter = reprocesado != null ?
                new ObjectParameter("Reprocesado", reprocesado) :
                new ObjectParameter("Reprocesado", typeof(string));
    
            var polizaParameter = poliza != null ?
                new ObjectParameter("Poliza", poliza) :
                new ObjectParameter("Poliza", typeof(string));
    
            var polizaGeneradaParameter = polizaGenerada.HasValue ?
                new ObjectParameter("PolizaGenerada", polizaGenerada) :
                new ObjectParameter("PolizaGenerada", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_ActualizarDatosPolizaSAP", idPolizaParameter, sentidoParameter, estadoParameter, enviadoParameter, nombreParameter, numeroPolizaParameter, descripcionMensajeParameter, rechazadoParameter, reprocesadoParameter, polizaParameter, polizaGeneradaParameter);
        }
    
        public virtual int usp_ActualizarDatosPolizaSAPRoaming(Nullable<long> idPoliza, string sentido, string estado, Nullable<bool> enviado, string nombre, string numeroPoliza, string descripcionMensaje, string rechazado, string reprocesado, string poliza, Nullable<bool> polizaGenerada)
        {
            var idPolizaParameter = idPoliza.HasValue ?
                new ObjectParameter("IdPoliza", idPoliza) :
                new ObjectParameter("IdPoliza", typeof(long));
    
            var sentidoParameter = sentido != null ?
                new ObjectParameter("Sentido", sentido) :
                new ObjectParameter("Sentido", typeof(string));
    
            var estadoParameter = estado != null ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(string));
    
            var enviadoParameter = enviado.HasValue ?
                new ObjectParameter("Enviado", enviado) :
                new ObjectParameter("Enviado", typeof(bool));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var numeroPolizaParameter = numeroPoliza != null ?
                new ObjectParameter("NumeroPoliza", numeroPoliza) :
                new ObjectParameter("NumeroPoliza", typeof(string));
    
            var descripcionMensajeParameter = descripcionMensaje != null ?
                new ObjectParameter("DescripcionMensaje", descripcionMensaje) :
                new ObjectParameter("DescripcionMensaje", typeof(string));
    
            var rechazadoParameter = rechazado != null ?
                new ObjectParameter("Rechazado", rechazado) :
                new ObjectParameter("Rechazado", typeof(string));
    
            var reprocesadoParameter = reprocesado != null ?
                new ObjectParameter("Reprocesado", reprocesado) :
                new ObjectParameter("Reprocesado", typeof(string));
    
            var polizaParameter = poliza != null ?
                new ObjectParameter("Poliza", poliza) :
                new ObjectParameter("Poliza", typeof(string));
    
            var polizaGeneradaParameter = polizaGenerada.HasValue ?
                new ObjectParameter("PolizaGenerada", polizaGenerada) :
                new ObjectParameter("PolizaGenerada", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_ActualizarDatosPolizaSAPRoaming", idPolizaParameter, sentidoParameter, estadoParameter, enviadoParameter, nombreParameter, numeroPolizaParameter, descripcionMensajeParameter, rechazadoParameter, reprocesadoParameter, polizaParameter, polizaGeneradaParameter);
        }
    
        public virtual int usp_ActualizarMultiplePolizas(Nullable<int> idLinea, Nullable<int> id_Devengo, string claveContab, string cME, string indicadorImpuesto, string centroCosto, string cuenta, string region, string licencia, string tipoDeTrafico, string ambito, string producto, string empresaGrupo, string areaFuncional, string subsegmento, string bundlePaquetes, string subtipoLinea, string canal, string serviciosPA, string segmentoPA, string sentido)
        {
            var idLineaParameter = idLinea.HasValue ?
                new ObjectParameter("IdLinea", idLinea) :
                new ObjectParameter("IdLinea", typeof(int));
    
            var id_DevengoParameter = id_Devengo.HasValue ?
                new ObjectParameter("Id_Devengo", id_Devengo) :
                new ObjectParameter("Id_Devengo", typeof(int));
    
            var claveContabParameter = claveContab != null ?
                new ObjectParameter("ClaveContab", claveContab) :
                new ObjectParameter("ClaveContab", typeof(string));
    
            var cMEParameter = cME != null ?
                new ObjectParameter("CME", cME) :
                new ObjectParameter("CME", typeof(string));
    
            var indicadorImpuestoParameter = indicadorImpuesto != null ?
                new ObjectParameter("IndicadorImpuesto", indicadorImpuesto) :
                new ObjectParameter("IndicadorImpuesto", typeof(string));
    
            var centroCostoParameter = centroCosto != null ?
                new ObjectParameter("CentroCosto", centroCosto) :
                new ObjectParameter("CentroCosto", typeof(string));
    
            var cuentaParameter = cuenta != null ?
                new ObjectParameter("Cuenta", cuenta) :
                new ObjectParameter("Cuenta", typeof(string));
    
            var regionParameter = region != null ?
                new ObjectParameter("Region", region) :
                new ObjectParameter("Region", typeof(string));
    
            var licenciaParameter = licencia != null ?
                new ObjectParameter("Licencia", licencia) :
                new ObjectParameter("Licencia", typeof(string));
    
            var tipoDeTraficoParameter = tipoDeTrafico != null ?
                new ObjectParameter("TipoDeTrafico", tipoDeTrafico) :
                new ObjectParameter("TipoDeTrafico", typeof(string));
    
            var ambitoParameter = ambito != null ?
                new ObjectParameter("Ambito", ambito) :
                new ObjectParameter("Ambito", typeof(string));
    
            var productoParameter = producto != null ?
                new ObjectParameter("Producto", producto) :
                new ObjectParameter("Producto", typeof(string));
    
            var empresaGrupoParameter = empresaGrupo != null ?
                new ObjectParameter("EmpresaGrupo", empresaGrupo) :
                new ObjectParameter("EmpresaGrupo", typeof(string));
    
            var areaFuncionalParameter = areaFuncional != null ?
                new ObjectParameter("AreaFuncional", areaFuncional) :
                new ObjectParameter("AreaFuncional", typeof(string));
    
            var subsegmentoParameter = subsegmento != null ?
                new ObjectParameter("Subsegmento", subsegmento) :
                new ObjectParameter("Subsegmento", typeof(string));
    
            var bundlePaquetesParameter = bundlePaquetes != null ?
                new ObjectParameter("BundlePaquetes", bundlePaquetes) :
                new ObjectParameter("BundlePaquetes", typeof(string));
    
            var subtipoLineaParameter = subtipoLinea != null ?
                new ObjectParameter("SubtipoLinea", subtipoLinea) :
                new ObjectParameter("SubtipoLinea", typeof(string));
    
            var canalParameter = canal != null ?
                new ObjectParameter("Canal", canal) :
                new ObjectParameter("Canal", typeof(string));
    
            var serviciosPAParameter = serviciosPA != null ?
                new ObjectParameter("ServiciosPA", serviciosPA) :
                new ObjectParameter("ServiciosPA", typeof(string));
    
            var segmentoPAParameter = segmentoPA != null ?
                new ObjectParameter("SegmentoPA", segmentoPA) :
                new ObjectParameter("SegmentoPA", typeof(string));
    
            var sentidoParameter = sentido != null ?
                new ObjectParameter("Sentido", sentido) :
                new ObjectParameter("Sentido", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_ActualizarMultiplePolizas", idLineaParameter, id_DevengoParameter, claveContabParameter, cMEParameter, indicadorImpuestoParameter, centroCostoParameter, cuentaParameter, regionParameter, licenciaParameter, tipoDeTraficoParameter, ambitoParameter, productoParameter, empresaGrupoParameter, areaFuncionalParameter, subsegmentoParameter, bundlePaquetesParameter, subtipoLineaParameter, canalParameter, serviciosPAParameter, segmentoPAParameter, sentidoParameter);
        }
    
        public virtual int usp_ActualizarMultiplePolizasRoaming(Nullable<int> idLinea, Nullable<int> id_Devengo, string claveContab, string cME, string indicadorImpuesto, string centroCosto, string cuenta, string region, string licencia, string tipoDeTrafico, string ambito, string producto, string empresaGrupo, string areaFuncional, string subsegmento, string bundlePaquetes, string subtipoLinea, string canal, string serviciosPA, string segmentoPA, string sentido)
        {
            var idLineaParameter = idLinea.HasValue ?
                new ObjectParameter("IdLinea", idLinea) :
                new ObjectParameter("IdLinea", typeof(int));
    
            var id_DevengoParameter = id_Devengo.HasValue ?
                new ObjectParameter("Id_Devengo", id_Devengo) :
                new ObjectParameter("Id_Devengo", typeof(int));
    
            var claveContabParameter = claveContab != null ?
                new ObjectParameter("ClaveContab", claveContab) :
                new ObjectParameter("ClaveContab", typeof(string));
    
            var cMEParameter = cME != null ?
                new ObjectParameter("CME", cME) :
                new ObjectParameter("CME", typeof(string));
    
            var indicadorImpuestoParameter = indicadorImpuesto != null ?
                new ObjectParameter("IndicadorImpuesto", indicadorImpuesto) :
                new ObjectParameter("IndicadorImpuesto", typeof(string));
    
            var centroCostoParameter = centroCosto != null ?
                new ObjectParameter("CentroCosto", centroCosto) :
                new ObjectParameter("CentroCosto", typeof(string));
    
            var cuentaParameter = cuenta != null ?
                new ObjectParameter("Cuenta", cuenta) :
                new ObjectParameter("Cuenta", typeof(string));
    
            var regionParameter = region != null ?
                new ObjectParameter("Region", region) :
                new ObjectParameter("Region", typeof(string));
    
            var licenciaParameter = licencia != null ?
                new ObjectParameter("Licencia", licencia) :
                new ObjectParameter("Licencia", typeof(string));
    
            var tipoDeTraficoParameter = tipoDeTrafico != null ?
                new ObjectParameter("TipoDeTrafico", tipoDeTrafico) :
                new ObjectParameter("TipoDeTrafico", typeof(string));
    
            var ambitoParameter = ambito != null ?
                new ObjectParameter("Ambito", ambito) :
                new ObjectParameter("Ambito", typeof(string));
    
            var productoParameter = producto != null ?
                new ObjectParameter("Producto", producto) :
                new ObjectParameter("Producto", typeof(string));
    
            var empresaGrupoParameter = empresaGrupo != null ?
                new ObjectParameter("EmpresaGrupo", empresaGrupo) :
                new ObjectParameter("EmpresaGrupo", typeof(string));
    
            var areaFuncionalParameter = areaFuncional != null ?
                new ObjectParameter("AreaFuncional", areaFuncional) :
                new ObjectParameter("AreaFuncional", typeof(string));
    
            var subsegmentoParameter = subsegmento != null ?
                new ObjectParameter("Subsegmento", subsegmento) :
                new ObjectParameter("Subsegmento", typeof(string));
    
            var bundlePaquetesParameter = bundlePaquetes != null ?
                new ObjectParameter("BundlePaquetes", bundlePaquetes) :
                new ObjectParameter("BundlePaquetes", typeof(string));
    
            var subtipoLineaParameter = subtipoLinea != null ?
                new ObjectParameter("SubtipoLinea", subtipoLinea) :
                new ObjectParameter("SubtipoLinea", typeof(string));
    
            var canalParameter = canal != null ?
                new ObjectParameter("Canal", canal) :
                new ObjectParameter("Canal", typeof(string));
    
            var serviciosPAParameter = serviciosPA != null ?
                new ObjectParameter("ServiciosPA", serviciosPA) :
                new ObjectParameter("ServiciosPA", typeof(string));
    
            var segmentoPAParameter = segmentoPA != null ?
                new ObjectParameter("SegmentoPA", segmentoPA) :
                new ObjectParameter("SegmentoPA", typeof(string));
    
            var sentidoParameter = sentido != null ?
                new ObjectParameter("Sentido", sentido) :
                new ObjectParameter("Sentido", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_ActualizarMultiplePolizasRoaming", idLineaParameter, id_DevengoParameter, claveContabParameter, cMEParameter, indicadorImpuestoParameter, centroCostoParameter, cuentaParameter, regionParameter, licenciaParameter, tipoDeTraficoParameter, ambitoParameter, productoParameter, empresaGrupoParameter, areaFuncionalParameter, subsegmentoParameter, bundlePaquetesParameter, subtipoLineaParameter, canalParameter, serviciosPAParameter, segmentoPAParameter, sentidoParameter);
        }
    
        public virtual int usp_CancelarPoliza(Nullable<int> idDevengo)
        {
            var idDevengoParameter = idDevengo.HasValue ?
                new ObjectParameter("IdDevengo", idDevengo) :
                new ObjectParameter("IdDevengo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_CancelarPoliza", idDevengoParameter);
        }
    
        public virtual int usp_CancelarPolizaRoaming(Nullable<int> idDevengo)
        {
            var idDevengoParameter = idDevengo.HasValue ?
                new ObjectParameter("IdDevengo", idDevengo) :
                new ObjectParameter("IdDevengo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_CancelarPolizaRoaming", idDevengoParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> usp_ContarPolizasGeneradas(Nullable<int> mes, Nullable<int> ano)
        {
            var mesParameter = mes.HasValue ?
                new ObjectParameter("Mes", mes) :
                new ObjectParameter("Mes", typeof(int));
    
            var anoParameter = ano.HasValue ?
                new ObjectParameter("Ano", ano) :
                new ObjectParameter("Ano", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("usp_ContarPolizasGeneradas", mesParameter, anoParameter);
        }
    
        public virtual int usp_DatosCabeceraRegistro(string sentido)
        {
            var sentidoParameter = sentido != null ?
                new ObjectParameter("sentido", sentido) :
                new ObjectParameter("sentido", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_DatosCabeceraRegistro", sentidoParameter);
        }
    
        public virtual int usp_DevengoAjustesROM(Nullable<System.DateTime> fECHA)
        {
            var fECHAParameter = fECHA.HasValue ?
                new ObjectParameter("FECHA", fECHA) :
                new ObjectParameter("FECHA", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_DevengoAjustesROM", fECHAParameter);
        }
    
        public virtual int usp_DevengoFluctuacionROM_INS(Nullable<System.DateTime> fECHA)
        {
            var fECHAParameter = fECHA.HasValue ?
                new ObjectParameter("FECHA", fECHA) :
                new ObjectParameter("FECHA", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_DevengoFluctuacionROM_INS", fECHAParameter);
        }
    
        public virtual int usp_InsertarArchivoLinea2()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_InsertarArchivoLinea2");
        }
    
        public virtual int usp_InsertarArchivoLinea2Roaming()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_InsertarArchivoLinea2Roaming");
        }
    
        public virtual int usp_InsertarDatosPolizaSAP(Nullable<long> idPoliza, string sentido, string estado, Nullable<bool> enviado, string nombre, string numeroPoliza, string descripcionMensaje, string rechazado, string reprocesado, string poliza, Nullable<bool> polizaGenerada)
        {
            var idPolizaParameter = idPoliza.HasValue ?
                new ObjectParameter("IdPoliza", idPoliza) :
                new ObjectParameter("IdPoliza", typeof(long));
    
            var sentidoParameter = sentido != null ?
                new ObjectParameter("Sentido", sentido) :
                new ObjectParameter("Sentido", typeof(string));
    
            var estadoParameter = estado != null ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(string));
    
            var enviadoParameter = enviado.HasValue ?
                new ObjectParameter("Enviado", enviado) :
                new ObjectParameter("Enviado", typeof(bool));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var numeroPolizaParameter = numeroPoliza != null ?
                new ObjectParameter("NumeroPoliza", numeroPoliza) :
                new ObjectParameter("NumeroPoliza", typeof(string));
    
            var descripcionMensajeParameter = descripcionMensaje != null ?
                new ObjectParameter("DescripcionMensaje", descripcionMensaje) :
                new ObjectParameter("DescripcionMensaje", typeof(string));
    
            var rechazadoParameter = rechazado != null ?
                new ObjectParameter("Rechazado", rechazado) :
                new ObjectParameter("Rechazado", typeof(string));
    
            var reprocesadoParameter = reprocesado != null ?
                new ObjectParameter("Reprocesado", reprocesado) :
                new ObjectParameter("Reprocesado", typeof(string));
    
            var polizaParameter = poliza != null ?
                new ObjectParameter("Poliza", poliza) :
                new ObjectParameter("Poliza", typeof(string));
    
            var polizaGeneradaParameter = polizaGenerada.HasValue ?
                new ObjectParameter("PolizaGenerada", polizaGenerada) :
                new ObjectParameter("PolizaGenerada", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_InsertarDatosPolizaSAP", idPolizaParameter, sentidoParameter, estadoParameter, enviadoParameter, nombreParameter, numeroPolizaParameter, descripcionMensajeParameter, rechazadoParameter, reprocesadoParameter, polizaParameter, polizaGeneradaParameter);
        }
    
        public virtual int usp_InsertarHistoricoRechazoPolizas()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_InsertarHistoricoRechazoPolizas");
        }
    
        public virtual int usp_InsertarLinea1()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_InsertarLinea1");
        }
    
        public virtual int usp_InsertarLinea1Roaming()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_InsertarLinea1Roaming");
        }
    
        public virtual int usp_LimpiarCargas()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_LimpiarCargas");
        }
    
        public virtual int usp_ListadoPolizas(Nullable<System.DateTime> periodo)
        {
            var periodoParameter = periodo.HasValue ?
                new ObjectParameter("Periodo", periodo) :
                new ObjectParameter("Periodo", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_ListadoPolizas", periodoParameter);
        }
    
        public virtual ObjectResult<usp_ListadoPolizasFiltro_Result> usp_ListadoPolizasFiltro(Nullable<int> mes, Nullable<int> ano)
        {
            var mesParameter = mes.HasValue ?
                new ObjectParameter("Mes", mes) :
                new ObjectParameter("Mes", typeof(int));
    
            var anoParameter = ano.HasValue ?
                new ObjectParameter("Ano", ano) :
                new ObjectParameter("Ano", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ListadoPolizasFiltro_Result>("usp_ListadoPolizasFiltro", mesParameter, anoParameter);
        }
    
        public virtual ObjectResult<usp_ListadoPolizasFiltroRoaming_Result> usp_ListadoPolizasFiltroRoaming(Nullable<int> mes, Nullable<int> ano)
        {
            var mesParameter = mes.HasValue ?
                new ObjectParameter("Mes", mes) :
                new ObjectParameter("Mes", typeof(int));
    
            var anoParameter = ano.HasValue ?
                new ObjectParameter("Ano", ano) :
                new ObjectParameter("Ano", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ListadoPolizasFiltroRoaming_Result>("usp_ListadoPolizasFiltroRoaming", mesParameter, anoParameter);
        }
    
        public virtual int usp_ListadoPolizasRoaming(Nullable<System.DateTime> periodo)
        {
            var periodoParameter = periodo.HasValue ?
                new ObjectParameter("Periodo", periodo) :
                new ObjectParameter("Periodo", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_ListadoPolizasRoaming", periodoParameter);
        }
    
        public virtual ObjectResult<usp_MostrarLineaArchivo1Agrupado_Result> usp_MostrarLineaArchivo1Agrupado(string servicio, string sentido, Nullable<System.DateTime> periodo)
        {
            var servicioParameter = servicio != null ?
                new ObjectParameter("Servicio", servicio) :
                new ObjectParameter("Servicio", typeof(string));
    
            var sentidoParameter = sentido != null ?
                new ObjectParameter("Sentido", sentido) :
                new ObjectParameter("Sentido", typeof(string));
    
            var periodoParameter = periodo.HasValue ?
                new ObjectParameter("Periodo", periodo) :
                new ObjectParameter("Periodo", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_MostrarLineaArchivo1Agrupado_Result>("usp_MostrarLineaArchivo1Agrupado", servicioParameter, sentidoParameter, periodoParameter);
        }
    
        public virtual ObjectResult<usp_MostrarLineaArchivo1AgrupadoRoaming_Result> usp_MostrarLineaArchivo1AgrupadoRoaming(string servicio, string sentido)
        {
            var servicioParameter = servicio != null ?
                new ObjectParameter("Servicio", servicio) :
                new ObjectParameter("Servicio", typeof(string));
    
            var sentidoParameter = sentido != null ?
                new ObjectParameter("Sentido", sentido) :
                new ObjectParameter("Sentido", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_MostrarLineaArchivo1AgrupadoRoaming_Result>("usp_MostrarLineaArchivo1AgrupadoRoaming", servicioParameter, sentidoParameter);
        }
    
        public virtual ObjectResult<usp_MostrarLineaArchivo2Agrupado_Result> usp_MostrarLineaArchivo2Agrupado(string servicio, string sentido, Nullable<System.DateTime> periodo)
        {
            var servicioParameter = servicio != null ?
                new ObjectParameter("Servicio", servicio) :
                new ObjectParameter("Servicio", typeof(string));
    
            var sentidoParameter = sentido != null ?
                new ObjectParameter("Sentido", sentido) :
                new ObjectParameter("Sentido", typeof(string));
    
            var periodoParameter = periodo.HasValue ?
                new ObjectParameter("Periodo", periodo) :
                new ObjectParameter("Periodo", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_MostrarLineaArchivo2Agrupado_Result>("usp_MostrarLineaArchivo2Agrupado", servicioParameter, sentidoParameter, periodoParameter);
        }
    
        public virtual ObjectResult<usp_MostrarLineaArchivo2AgrupadoRoaming_Result> usp_MostrarLineaArchivo2AgrupadoRoaming(string servicio, string sentido)
        {
            var servicioParameter = servicio != null ?
                new ObjectParameter("Servicio", servicio) :
                new ObjectParameter("Servicio", typeof(string));
    
            var sentidoParameter = sentido != null ?
                new ObjectParameter("Sentido", sentido) :
                new ObjectParameter("Sentido", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_MostrarLineaArchivo2AgrupadoRoaming_Result>("usp_MostrarLineaArchivo2AgrupadoRoaming", servicioParameter, sentidoParameter);
        }
    
        public virtual ObjectResult<usp_MostrarLineaArchivo2FluctuacionAgrupado_Result> usp_MostrarLineaArchivo2FluctuacionAgrupado(string servicio, string sentido)
        {
            var servicioParameter = servicio != null ?
                new ObjectParameter("Servicio", servicio) :
                new ObjectParameter("Servicio", typeof(string));
    
            var sentidoParameter = sentido != null ?
                new ObjectParameter("Sentido", sentido) :
                new ObjectParameter("Sentido", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_MostrarLineaArchivo2FluctuacionAgrupado_Result>("usp_MostrarLineaArchivo2FluctuacionAgrupado", servicioParameter, sentidoParameter);
        }
    
        public virtual int usp_MostrarPolizasAgrupdo(Nullable<System.DateTime> periodo)
        {
            var periodoParameter = periodo.HasValue ?
                new ObjectParameter("Periodo", periodo) :
                new ObjectParameter("Periodo", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_MostrarPolizasAgrupdo", periodoParameter);
        }
    
        public virtual ObjectResult<usp_MostrarPolizasAgrupdoCSV_Result> usp_MostrarPolizasAgrupdoCSV(string sentido, Nullable<System.DateTime> periodo)
        {
            var sentidoParameter = sentido != null ?
                new ObjectParameter("Sentido", sentido) :
                new ObjectParameter("Sentido", typeof(string));
    
            var periodoParameter = periodo.HasValue ?
                new ObjectParameter("Periodo", periodo) :
                new ObjectParameter("Periodo", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_MostrarPolizasAgrupdoCSV_Result>("usp_MostrarPolizasAgrupdoCSV", sentidoParameter, periodoParameter);
        }
    
        public virtual ObjectResult<usp_MostrarPolizasAgrupdoCSVRoaming_Result> usp_MostrarPolizasAgrupdoCSVRoaming(string sentido, Nullable<System.DateTime> periodo)
        {
            var sentidoParameter = sentido != null ?
                new ObjectParameter("Sentido", sentido) :
                new ObjectParameter("Sentido", typeof(string));
    
            var periodoParameter = periodo.HasValue ?
                new ObjectParameter("Periodo", periodo) :
                new ObjectParameter("Periodo", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_MostrarPolizasAgrupdoCSVRoaming_Result>("usp_MostrarPolizasAgrupdoCSVRoaming", sentidoParameter, periodoParameter);
        }
    
        public virtual int usp_MostrarPolizasAgrupdoRoaming(Nullable<System.DateTime> periodo)
        {
            var periodoParameter = periodo.HasValue ?
                new ObjectParameter("Periodo", periodo) :
                new ObjectParameter("Periodo", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_MostrarPolizasAgrupdoRoaming", periodoParameter);
        }
    
        public virtual int usp_PeriodosAnterioresCostoROM(Nullable<int> mes, Nullable<int> anio)
        {
            var mesParameter = mes.HasValue ?
                new ObjectParameter("Mes", mes) :
                new ObjectParameter("Mes", typeof(int));
    
            var anioParameter = anio.HasValue ?
                new ObjectParameter("Anio", anio) :
                new ObjectParameter("Anio", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_PeriodosAnterioresCostoROM", mesParameter, anioParameter);
        }
    
        public virtual int usp_PeriodosAnterioresIngresoROM(Nullable<int> mes, Nullable<int> anio)
        {
            var mesParameter = mes.HasValue ?
                new ObjectParameter("Mes", mes) :
                new ObjectParameter("Mes", typeof(int));
    
            var anioParameter = anio.HasValue ?
                new ObjectParameter("Anio", anio) :
                new ObjectParameter("Anio", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_PeriodosAnterioresIngresoROM", mesParameter, anioParameter);
        }
    
        public virtual int usp_ResumenDevengo_INS(Nullable<System.DateTime> fECHA, Nullable<decimal> tIPOCAMBIO)
        {
            var fECHAParameter = fECHA.HasValue ?
                new ObjectParameter("FECHA", fECHA) :
                new ObjectParameter("FECHA", typeof(System.DateTime));
    
            var tIPOCAMBIOParameter = tIPOCAMBIO.HasValue ?
                new ObjectParameter("TIPOCAMBIO", tIPOCAMBIO) :
                new ObjectParameter("TIPOCAMBIO", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_ResumenDevengo_INS", fECHAParameter, tIPOCAMBIOParameter);
        }
    
        public virtual ObjectResult<usp_ResumenPXQ_Result> usp_ResumenPXQ(Nullable<System.DateTime> fECHA, Nullable<decimal> tIPOCAMBIO)
        {
            var fECHAParameter = fECHA.HasValue ?
                new ObjectParameter("FECHA", fECHA) :
                new ObjectParameter("FECHA", typeof(System.DateTime));
    
            var tIPOCAMBIOParameter = tIPOCAMBIO.HasValue ?
                new ObjectParameter("TIPOCAMBIO", tIPOCAMBIO) :
                new ObjectParameter("TIPOCAMBIO", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ResumenPXQ_Result>("usp_ResumenPXQ", fECHAParameter, tIPOCAMBIOParameter);
        }
    
        public virtual int uspListadoArchivosSAP(Nullable<int> mes, Nullable<int> ano, Nullable<int> tipo)
        {
            var mesParameter = mes.HasValue ?
                new ObjectParameter("Mes", mes) :
                new ObjectParameter("Mes", typeof(int));
    
            var anoParameter = ano.HasValue ?
                new ObjectParameter("Ano", ano) :
                new ObjectParameter("Ano", typeof(int));
    
            var tipoParameter = tipo.HasValue ?
                new ObjectParameter("Tipo", tipo) :
                new ObjectParameter("Tipo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspListadoArchivosSAP", mesParameter, anoParameter, tipoParameter);
        }
    }
}
